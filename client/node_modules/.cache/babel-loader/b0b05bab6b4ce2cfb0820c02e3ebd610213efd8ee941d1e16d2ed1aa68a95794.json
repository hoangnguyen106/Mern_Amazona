{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Booking_App\\\\client\\\\src\\\\screens\\\\ProfileScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useReducer, useState } from \"react\";\nimport { Store } from \"../Store\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport { getError } from \"../ultils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_REQUEST\":\n      return {\n        ...state,\n        loadingUpdate: true\n      };\n    case \"UPDATE_SUCCESS\":\n      return {\n        ...state,\n        loadingUpdate: false\n      };\n    case \"UPDATE_FAIL\":\n      return {\n        ...state,\n        loadingUpdate: false\n      };\n    default:\n      return state;\n  }\n};\nfunction ProfileScreen() {\n  _s();\n  // const navigate = useNavigate();\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState(userInfo.password);\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [{\n    loadingUpdate\n  }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false\n  });\n  const submitHandler = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data\n      } = await axios.put('/api/users/profile');\n    } catch (error) {\n      dispatch({\n        type: \"FETCH_FAIL\"\n      });\n      toast.error(getError(error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container small-container\",\n    style: {\n      maxWidth: 600\n    },\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-3\",\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"confirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfileScreen, \"j4xPCTAVSay1vPhTwfDeE8J6WEg=\");\n_c = ProfileScreen;\nexport default ProfileScreen;\nvar _c;\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"names":["React","useContext","useReducer","useState","Store","Helmet","Button","Form","toast","getError","jsxDEV","_jsxDEV","reducer","state","action","type","loadingUpdate","ProfileScreen","_s","dispatch","ctxDispatch","userInfo","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","submitHandler","e","preventDefault","data","axios","put","error","className","style","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/nguye/Booking_App/client/src/screens/ProfileScreen.js"],"sourcesContent":["import React, { useContext, useReducer, useState } from \"react\";\r\nimport { Store } from \"../Store\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getError } from \"../ultils\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_REQUEST\":\r\n      return { ...state, loadingUpdate: true };\r\n    case \"UPDATE_SUCCESS\":\r\n      return { ...state, loadingUpdate: false };\r\n    case \"UPDATE_FAIL\":\r\n      return { ...state, loadingUpdate: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction ProfileScreen() {\r\n  // const navigate = useNavigate();\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const { userInfo } = state;\r\n\r\n  const [name, setName] = useState(userInfo.name);\r\n  const [email, setEmail] = useState(userInfo.email);\r\n  const [password, setPassword] = useState(userInfo.password);\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\r\n    loadingUpdate: false,\r\n  });\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const {data} = await axios.put('/api/users/profile')\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"FETCH_FAIL\",\r\n      });\r\n      toast.error(getError(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container small-container\" style={{ maxWidth: 600 }}>\r\n      <Helmet>\r\n        <title>User Profile</title>\r\n      </Helmet>\r\n      <h1 className=\"my-3\">User Profile</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group className=\"mb-3\" controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <div className=\"mb-3\">\r\n          <Button type=\"submit\">Update</Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}